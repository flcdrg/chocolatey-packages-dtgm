<?xml version="1.0" encoding="utf-8"?>
<package xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <metadata>
    <id>{{PackageName}}</id>
    <title>ProcDump</title>
    <version>{{PackageVersion}}</version>
    <authors>Mark Russinovich</authors>
    <owners>dtgm</owners>
    <summary>This command-line utility is aimed at capturing process dumps of otherwise difficult to isolate and reproduce CPU spikes. It also serves as a general process dump creation utility and can also monitor and generate process dumps when a process has a hung window or unhandled exception</summary>
    <description>
This command-line utility is aimed at capturing process dumps of otherwise difficult to isolate and reproduce CPU spikes. It also serves as a general process dump creation utility and can also monitor and generate process dumps when a process has a hung window or unhandled exception.

ProcDump is a command-line utility whose primary purpose is monitoring an application for CPU spikes and generating crash dumps during a spike that an administrator or developer can use to determine the cause of the spike. ProcDump also includes hung window monitoring (using the same definition of a window hang that Windows and Task Manager use), unhandled exception monitoring and can generate dumps based on the values of system performance counters. It also can serve as a general process dump utility that you can embed in other scripts.

#### Command line usage

__usage: procdump [-a] [[-c|-cl CPU usage] [-u] [-s seconds]] [-n exceeds] [-e [1 [-b]] [-f `<filter,...`>] [-g] [-h] [-l] [-m|-ml commit usage] [-ma | -mp] [-o] [-p|-pl counter threshold] [-r] [-t] [-d `<callback DLL`>] [-64] `<[-w] `<process name or service name or PID`> [dump file] | -i `<dump file`> | -u | -x `<dump file`> `<image file`> [arguments] `>] [-? [ -e]__
.`

__-a__</td><td valign="top">Avoid outage. Requires -r. If the trigger will cause the target to suspend for a prolonged time due to an exceeded concurrent dump limit, the trigger will be skipped.</td></tr><tr><td valign="top">__-b__</td><td valign="top">Treat debug breakpoints as exceptions (otherwise ignore them).</td></tr><tr><td valign="top">__-c__</td><td valign="top">CPU threshold at which to create a dump of the process.`

__-cl__
`     CPU threshold below which to create a dump of the process.</td></tr><tr><td valign="top">__-d__</td><td valign="top">Invoke the minidump callback routine named MiniDumpCallbackRoutine of the specified DLL.</td></tr><tr><td valign="top">__-e__</td><td valign="top">Write a dump when the process encounters an unhandled exception. Include the 1 to create dump on first chance exceptions.</td></tr><tr><td valign="top">__-f__</td><td valign="top">Filter the first chance exceptions. Wildcards (*) are supported. To just display the names without dumping, use a blank ("") filter.</td></tr><tr><td valign="top">__-g__</td><td valign="top">Run as a native debugger in a managed process (no interop).</td></tr><tr><td valign="top">__-h__</td><td valign="top">Write dump if process has a hung window (does not respond to window messages for at least 5 seconds).`

__-i__
`     Install ProcDump as the AeDebug postmortem debugger. Only -ma, -mp, -d and -r are supported as additional options.</td></tr><tr><td valign="top">__-l__</td><td valign="top">Display the debug logging of the process.</td></tr><tr><td valign="top">__-m__</td><td valign="top">Memory commit threshold in MB at which to create a dump.</td></tr><tr><td valign="top">__-ma__</td><td valign="top">Write a dump file with all process memory. The default dump format only includes thread and handle information.`

__-ml__
`     Trigger when memory commit drops below specified MB value.</td></tr><tr><td valign="top">__-mp__</td><td valign="top">Write a dump file with thread and handle information, and all read/write process memory. To minimize dump size, memory areas larger than 512MB are searched for, and if found, the largest area is excluded. A memory area is the collection of same sized memory allocation areas. The removal of this (cache) memory reduces Exchange and SQL Server dumps by over 90%.</td></tr><tr><td valign="top">__-n__</td><td valign="top">Number of dumps to write before exiting.</td></tr><tr><td valign="top">__-o__</td><td valign="top">Overwrite an existing dump file.</td></tr><tr><td valign="top">__-p__</td><td valign="top">Trigger on the specified performance counter when the threshold is exceeded. Note: to specify a process counter when there are multiple instances of the process running, use the process ID with the following syntax: "\Process(`<name`>_`<pid`>)\counter".`

__-pl__
`     Trigger when performance counter falls below the specified value.</td></tr><tr><td valign="top">__-r__</td><td valign="top">
Dump using a clone. Concurrent limit is optional (default 1, max 5).  CAUTION: a high concurrency value may impact system performance.
      
* Windows 7   : Uses Reflection. OS doesn't support -e.      
* Windows 8.0 : Uses Reflection. OS doesn't support -e.      
* Windows 8.1+: Uses PSS. All trigger types are supported.      
* </td></tr><tr><td valign="top">__-s__</td><td valign="top">Consecutive seconds before dump is written (default is 10).</td></tr><tr><td valign="top">__-t__</td><td valign="top">Write a dump when the process terminates.</td></tr><tr><td valign="top">__-u__</td><td valign="top">Treat CPU usage relative to a single core (used with -c).  As the only option, Uninstalls ProcDump as the postmortem debugger.</td></tr><tr><td valign="top">__-w__</td><td valign="top">Wait for the specified process to launch if it's not running.</td></tr><tr><td valign="top">__-x__</td><td valign="top">Launch the specified image with optional arguments. If it is a Store Application or Package, ProcDump will start on the next activation (only).`

__-64__
`     By default ProcDump will capture a 32-bit dump of a 32-bit process when running on 64-bit Windows. This option overrides to create a 64-bit dump. Only use for WOW64 subsystem debugging.</td></tr><tr><td valign="top">__-?__</td><td valign="top">Use -? -e to see example command lines.`
    </description>
    <packageSourceUrl>https://github.com/dtgm/chocolatey-packages/tree/master/automatic/_output/{{PackageName}}/{{PackageVersion}}</packageSourceUrl>
    <projectUrl>http://technet.microsoft.com/sysinternals/dd996900</projectUrl>
    <mailingListUrl>http://forum.sysinternals.com/</mailingListUrl>
    <tags>process tools sysinternals</tags>
    <copyright>© Mark Russinovich</copyright>
    <licenseUrl>https://technet.microsoft.com/en-us/sysinternals/bb469936</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <releaseNotes>
#### Program
* [News](http://blogs.technet.com/Sysinternals)

#### Package
* Automatically built and uploaded by [dtgm](https://chocolatey.org/profiles/dtgm)
    </releaseNotes>
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>